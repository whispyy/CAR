import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.nio.file.Files;
 
import org.mockftpserver.fake.FakeFtpServer;
import org.mockftpserver.fake.UserAccount;
import org.mockftpserver.fake.filesystem.DirectoryEntry;
import org.mockftpserver.fake.filesystem.FileEntry;
import org.mockftpserver.fake.filesystem.FileSystem;
import org.mockftpserver.fake.filesystem.WindowsFakeFileSystem;
 
/**
 * FTP server mock to be used with unit tests.
 *
 * @author diniz
 *
 */
public class FtpServerMock {
 
    private FakeFtpServer fakeFtpServer;
 
    public FtpServerMock(int port, String userName, String password, File homeDir){
        fakeFtpServer = new FakeFtpServer();
        fakeFtpServer.setServerControlPort(port);
        fakeFtpServer.addUserAccount(new UserAccount(userName, password, homeDir.getAbsolutePath()));
    }
 
    public void addDir(File dir) throws Exception {
    	FileSystem fileSystem = new WindowsFakeFileSystem();
    	fileSystem.add(new DirectoryEntry(dir.getAbsolutePath()));
    	addDirectory(fileSystem, dir);
    	fakeFtpServer.setFileSystem(fileSystem);
    	}

    	private void addDirectory(FileSystem fileSystem, File dir) throws Exception {
    	for (File file : dir.listFiles()) {
    	if (file.isFile()) {
    	addFile(fileSystem, file);
    	} else if (file.isDirectory()) {
    	addDirectory(fileSystem, file);
    	}
    	}
    	}

    	private void addFile(FileSystem fileSystem, File file) throws Exception {
    	fileSystem.add(new FileEntry(file.getAbsolutePath(), IOUtils.toString(new FileInputStream(file))));
    	}
 
    /**
     * Start the server
     */
    public void start(){
        fakeFtpServer.start();
    }
 
    /**
     * Stop the server
     */
    public void stop(){
        fakeFtpServer.stop();
    }
 
}