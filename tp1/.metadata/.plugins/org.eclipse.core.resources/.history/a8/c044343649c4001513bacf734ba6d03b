import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
 
import org.mockftpserver.fake.FakeFtpServer;
import org.mockftpserver.fake.UserAccount;
import org.mockftpserver.fake.filesystem.DirectoryEntry;
import org.mockftpserver.fake.filesystem.FileEntry;
import org.mockftpserver.fake.filesystem.FileSystem;
import org.mockftpserver.fake.filesystem.WindowsFakeFileSystem;
 
/**
 * FTP server mock to be used with unit tests.
 *
 * @author diniz
 *
 */
public class FtpServerMock {
 
    private FakeFtpServer fakeFtpServer;
 
    public FtpServerMock(int port, String userName, String password, File homeDir){
        fakeFtpServer = new FakeFtpServer();
        fakeFtpServer.setServerControlPort(port);
        fakeFtpServer.addUserAccount(new UserAccount(userName, password, homeDir.getAbsolutePath()));
    }
 
    /**
     * Add the given directory and all it's files recursively
     *
     * @param dir
     */
    public void addDir(File dir){
        FileSystem fileSystem = new WindowsFakeFileSystem();
        fileSystem.add(new DirectoryEntry(dir.getAbsolutePath()));
        for(File file : dir.listFiles()){
            try {
                fileSystem.add(new FileEntry(file.getAbsolutePath(), FileUtils.readFully(new FileReader(file))));
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        fakeFtpServer.setFileSystem(fileSystem);
    }
 
    /**
     * Start the server
     */
    public void start(){
        fakeFtpServer.start();
    }
 
    /**
     * Stop the server
     */
    public void stop(){
        fakeFtpServer.stop();
    }
 
}